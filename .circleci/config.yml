version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.15.0

    steps:
      - checkout
      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run: npm run test
      - save_cache:
          paths:
            - $HOME/.npm
          key: npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}

  automerge:
    docker:
      - image: circleci/node:8.15.0

    steps:
      - checkout
      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run:
          name: Merge greenkeeper branch
          command: npm run ci:automerge

  build:
    docker:
      - image: circleci/node:8.15.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - 73:b4:4d:e2:33:06:62:72:5b:df:cd:8c:f4:be:d8:cc
      - checkout
      - restore_cache:
          keys:
          - npm-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run: npm run build
      - run: |
          git config --global user.email "circleci@harvestbot"
          git config --global user.name "CircleCI"
          rm -rf bin/
          cp -R build/ bin/
          git add bin/
          if git commit -a -m "[skip ci] Update deployable build output." --allow-empty; then
            git push origin dev
            # Trigger deployment with updated build output
            curl -u ${CIRCLE_API_PROJECT_TOKEN}: -d build_parameters[CIRCLE_JOB]=deploy_test https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
          fi

  deploy_test:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY_TEST > ${HOME}/gcloud-service-key.json
      - run:
          name: Deploy cloud functions to test
          command: ./tools/deploy.sh $GCLOUD_PROJECT_TEST $GCLOUD_FUNCTION_REGION_TEST

  deploy_prod:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY_PROD > ${HOME}/gcloud-service-key.json
      - run:
          name: Deploy cloud functions to prod
          command: ./tools/deploy.sh $GCLOUD_PROJECT_PROD $GCLOUD_FUNCTION_REGION_PROD

  notify:
    docker:
      - image: circleci/node:8.15.0
    steps:
      - checkout
      - run: ./tools/notify.sh

only-tags: &only-tags
 filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/

workflows:
  version: 2
  # test_and_deploy:
  #   jobs:
  #     - test
  #     - build:
  #         requires:
  #           - test
  #         filters:
  #           branches:
  #             only: dev
  #     - automerge:
  #         requires:
  #           - test
  #         filters:
  #           branches:
  #             only: /greenkeeper\S*/
  #     - deploy_prod:
  #         <<: *only-tags
  notify:
    triggers:
      - schedule:
          cron: "0 11 * * 5"
          filters:
            branches:
              only:
                - main
    jobs:
      - notify
